import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Scanner;

public class EnterMash {
    private static final int GAME_TIME       = 10;         // ゲームの制限時間（秒）
    private static final char TARGET_KEY     = '\n';     // Enterキー
    private static ArrayList<Score> ranking  = new ArrayList<>();
    public static void main(String[] args) throws IOException, InterruptedException {

        //ゲームの事前説明
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        System.out.println("連打ゲームを開始します。(制限時間 " + GAME_TIME + "秒)");
        System.out.print("プレイヤー名→ ");
        String name = reader.readLine();
        System.out.println("制限時間内にEnterキーを連打してください(押し続ける行為は禁止)");
        System.out.println("ゲームスタートの表示が出てからゲームスタートです\n");
        System.out.println("準備ができたらEnterキーを押してください(カウントダウンが始まります)");


        try {
            System.in.read();
        } catch (IOException e) {
            e.printStackTrace();
        }

        System.out.println("カウントダウン開始！");
        countDown();

        System.out.println("ゲームスタート!");
        long gameStartTime = System.currentTimeMillis();
        int totalHits = 0;


        //エンターキー連打数計測
        try {
            while (System.currentTimeMillis() - gameStartTime < GAME_TIME * 1000) {
                char inputKey = (char) reader.read();
                if (inputKey == TARGET_KEY) {
                    totalHits++;
                    if(totalHits % 10 == 0){
                        System.out.println(totalHits);
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }


        System.out.println("ゲーム終了！");
        System.out.println("総連打数: " + totalHits + "\n");
        Thread.sleep(500);

        //ランキング保存
        if (totalHits < 150) { // 連打数の制限
            Ranking ranking = new Ranking();
            ranking.addScoreToRanking(new Score(name, totalHits));
            ranking.displayRanking();
            ranking.saveRanking();
        } else {
            System.out.println("押し続ける行為を発見、記録は残りません\n");
        }
    }

    private static void countDown() {
        for (int i = 3; i > 0; i--) {
            System.out.println(i + "秒");
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}
